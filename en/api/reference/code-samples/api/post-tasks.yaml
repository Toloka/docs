- lang: shell
  label: 'cURL'
  source: |
    curl -X POST 'https://toloka.dev/api/v1/tasks' \
         -H 'Authorization: OAuth AQC2AGAJgyNSA8CtpdO9MWy_QEB6s6kDjHUoElE' \
         -H 'Content-Type: application/json' \
         -d '{"input_values":{"image":"https://example.com/image_example.png"},"known_solutions":[{"output_values":{"result":"pink"}}],"infinite_overlap":true,"pool_id":"1238218"}'
- lang: py
  label: 'Python: Toloka-Kit'
  source: |
    import toloka.client
    from toloka.client.task import Task, BaseTask

    toloka_client = toloka.client.TolokaClient(
      'AQC2AGAJgyNSA8CtpdO9MWy_QEB6s6kDjHUoElE', 'PRODUCTION')

    control_task = Task(
                input_values = {'image': 'https://example.com/image_example.png'},
                known_solutions = [
                  BaseTask.KnownSolution(output_values = {'result': 'pink'})
                ],
                infinite_overlap = True,
                pool_id = '1238218'
              )
    toloka_client.create_task(control_task)

    image_urls = [
      'https://example.com/image0.png',
      'https://example.com/image1.png',
      'https://example.com/image2.png',
    ]

    tasks = [ Task(input_values = {'image': url}, pool_id='1238218')
              for url in image_urls ]
    result = toloka_client.create_tasks(tasks,
              allow_defaults=True, skip_invalid_items=False)
  description: More details on this in the [Upload tasks](https://toloka.ai/docs/toloka-kit/recipes/upload-tasks/) Toloka-Kit recipe
- lang: python
  label: 'Python: Requests'
  source: |
    import requests

    url = "https://toloka.dev/api/v1/tasks"
    headers = {
      'Authorization': 'OAuth AQC2AGAJgyNSA8CtpdO9MWy_QEB6s6kDjHUoElE',
      'Content-Type': 'application/json'
    }
    payload = {
      "input_values": {
        "image": "https://example.com/image_example.png"
      },
      "known_solutions": [
        {
          "output_values": {
            "result": "pink"
          }
        }
      ],
      "infinite_overlap": True,
      "pool_id": "1238218"
    }
    response = requests.post(url, headers=headers, json=payload)

    print(response.text)
- lang: js
  label: 'Nodejs'
  source: |
    var request = require('request');
    var options = {
      'method': 'POST',
      'url': 'https://toloka.dev/api/v1/tasks',
      'qs': {},
      'headers': {
        'Authorization': 'OAuth AQC2AGAJgyNSA8CtpdO9MWy_QEB6s6kDjHUoElE',
        'Content-Type': 'application/json'
      },
      'body': JSON.stringify({
        "input_values": {
          "image": "https://example.com/image_example.png"
        },
        "known_solutions": [
          {
            "output_values": {
              "result": "pink"
            }
          }
        ],
        "infinite_overlap": true,
        "pool_id": "1238218"
      })
    };
    request(options, function (error, response) {
      if (error) throw new Error(error);
      console.log(response.body);
    });
- lang: java
  label: Java
  source: |
    Unirest.setTimeouts(0, 0);
    HttpResponse<String> response = Unirest.post("https://toloka.dev/api/v1/tasks")
      .header("Authorization", "OAuth AQC2AGAJgyNSA8CtpdO9MWy_QEB6s6kDjHUoElE")
      .header("Content-Type", "application/json")
      .body("{\"input_values\":{\"image\":\"https://example.com/image_example.png\"},\"known_solutions\":[{\"output_values\":{\"result\":\"pink\"}}],\"infinite_overlap\":true,\"pool_id\":\"1238218\"}")
      .asString();