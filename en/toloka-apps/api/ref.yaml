openapi: "3.0.2"
info:
  title: API Toloka Apps external
  version: "0.12"
  description: >-
    If you need to quickly solve a problem and you do not want to spend time on preparing a project, you can use the apps technology, which was specifically developed to ease the work with the platform.

    Select the problem to solve and fill out an [application form](https://toloka.ai/talk-to-us/) for creating a project: the Toloka CSA team will configure the project for you, create a task interface, and the platform will find performers. All you have to do is prepare and upload your data, run the project, and get the labeling results.

    To the Toloka customers, apps are available in the form of [bespoke solutions](https://toloka.ai/pricing).
servers:
  - url: https://toloka.dev/api/app/v0

tags:
  - name: app-project
    description: "A project with the parameters you specify when creating it. The interface and quality controls are pre-configured, decomposition is already done, and everything is ready to use: all you need is to upload batches and send them for labeling."
  - name: app
    description: An example of a standard task that you want to solve using Toloka. Unlike project templates, you don't have to set up everything yourself.
  - name: item
    description: A unique uploaded data row. It's uploaded into the batch with other rows to be collectively sent for labeling. In a file with data, each row is an item.
  - name: batch
    description: A batch of data that you send for labeling at a time. The batch consists of task items.

paths:
  /app-projects:
    get:
      tags:
        - app-project
      parameters:
        - name: app_id
          in: query
          description: ID of the bespoke solution that the projects belong to.
          required: false
          schema:
            type: string
        - name: parent_app_project_id
          in: query
          description: ID of the project used for cloning. This is specified only if you have created a new project by cloning another project. You can clone projects in the web version of Toloka.
          required: false
          schema:
            type: string
        - name: status
          in: query
          description: Project status.
          required: false
          schema:
            type: string
        - name: after_id
          in: query
          description: ID of the project used for cursor pagination.
          required: false
          schema:
            type: string
        - name: id_gt
          in: query
          description: Projects with an ID greater than the specified value.
          required: false
          schema:
            type: string
        - name: id_gte
          in: query
          description: Projects with an ID greater than or equal to the specified value.
          required: false
          schema:
            type: string
        - name: id_lt
          in: query
          description: Projects with an ID less than the specified value.
          required: false
          schema:
            type: string
        - name: id_lte
          in: query
          description: Projects with an ID less than or equal to the specified value.
          required: false
          schema:
            type: string
        - name: name_gt
          in: query
          description: Projects with a name lexicographically greater than the specified value.
          required: false
          schema:
            type: string
        - name: name_gte
          in: query
          description: Projects with a name lexicographically greater than or equal to the specified value.
          required: false
          schema:
            type: string
        - name: name_lt
          in: query
          description: Projects with a name lexicographically smaller than the specified value.
          required: false
          schema:
            type: string
        - name: name_lte
          in: query
          description: Projects with a name lexicographically smaller than or equal to the specified value.
          required: false
          schema:
            type: string
        - name: created_gt
          in: query
          description: "Projects created after the specified date. The date and time is specified in UTC in ISO 8601 format: YYYY-MM-DDThh:mm:ss[.sss]."
          required: false
          schema:
            type: string
        - name: created_gte
          in: query
          description: "Projects created after or on the specified date. The date and time is specified in UTC in ISO 8601 format: YYYY-MM-DDThh:mm:ss[.sss]."
          required: false
          schema:
            type: string
        - name: created_lt
          in: query
          description: "Projects created before the specified date. The date and time is specified in UTC in ISO 8601 format: YYYY-MM-DDThh:mm:ss[.sss]."
          required: false
          schema:
            type: string
        - name: created_lte
          in: query
          description: "Projects created before or on the specified date. The date and time is specified in UTC in ISO 8601 format: YYYY-MM-DDThh:mm:ss[.sss]."
          required: false
          schema:
            type: string
        - name: sort
          in: query
          description: 'The order and direction of sorting the results.

            Available parameters:

              * `id` - by id;

              * `name` - by name;

              * `created` â€” by the creation date. The date and time is specified in UTC in ISO 8601 format: YYYY-MM-DDThh:mm:ss[.sss].

            You can specify multiple parameters separated by a comma.

            To change the sorting direction to descending,
            add a hyphen before the parameter. For example, sort=-id.'
          required: false
          schema:
            type: string
        - name: limit
          in: query
          description: The number of objects on the page is set to 100 by default. The maximum value is 5000.
          required: false
          schema:
            type: string
        - name: scope
          in: query
          description: 'Projects created by a specified range of requesters:
            MY - Only by me;
            COMPANY - By anyone from the company;
            REQUESTER_LIST - By requesters with the specified IDs.'
          required: false
          schema:
            type: string
        - name: requester_ids
          in: query
          description: List of requester IDs separated by a comma, for scope = REQUESTER_LIST.
          required: false
          schema:
            type: string

      summary:  Get projects
      description: >-
        Returns the list of all the currently available projects. You can also filter this list using the query parameters.


        {% note tip %}


        **Try our [new API reference](https://toloka.ai/docs/api/apps-reference/#get-/app-projects):** more parameter details, request/response examples, and code samples in various programming languages.


        {% endnote %}
      responses:
        '200':
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/AppProjectListResult'
          description: OK

    post:
      tags:
        - app-project
      summary: Create project
      description: >-
        Creates a project with the parameters specified in the request.


        {% note tip %}


        **Try our [new API reference](https://toloka.ai/docs/api/apps-reference/#post-/app-projects):** more parameter details, request/response examples, and code samples in various programming languages.


        {% endnote %}
      requestBody:
        description: Parameters of the new project.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AppProjectCreateForm'
      responses:
        '200':
          description: A project with the CREATING status was created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppProject'

  /app-projects/{app_project_id}:
    get:
      tags:
        - app-project
      summary:  Get project by ID
      description: >-
        Displays the detailed information about the project with the ID specified in the request.


        {% note tip %}


        **Try our [new API reference](https://toloka.ai/docs/api/apps-reference/#get-/app-projects/-app_project_id-):** more parameter details, request/response examples, and code samples in various programming languages.


        {% endnote %}
      parameters:
      - name: app_project_id
        in: path
        description: Project ID.
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppProject'
              examples:
                good:
                  value:
                    id: '1'
                    app_id: '20'
                    parent_app_project_id: '12'
                    status: CREATING
                    created: 2021-04-15 12:30:01.951000
                    name: My app-project
                    item_price: 0.2
                    parameters: { }
                    errors: []
                    read_only: false
                    app:
                      id: '1'
                      name: Some app

                bad:
                  value:
                    id: '1'
                    app_id: '20'
                    parent_app_project_id: ''
                    status: ERROR
                    created: 2021-04-15 12:30:01.951000
                    name: My app-project
                    item_price: 0.2
                    parameters: { }
                    errors:
                      - code: DOES_NOT_EXIST
                        message: The project doesn't exist
                        payload:
                          instruction_class: dog
                          instruction_field: example
                    read_only: false
                    app:
                      id: '1'
                      name: Some app


        '404':
          description: Project {app_project_id} not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'

  /app-projects/{app_project_id}/archive:
    post:
      tags:
        - app-project
      summary:  Archive project
      description: >-
        Changes the project status to `ARCHIVE`.


        {% note tip %}


        **Try our [new API reference](https://toloka.ai/docs/api/apps-reference/#post-/app-projects/-app_project_id-/archive):** more parameter details, request/response examples, and code samples in various programming languages.


        {% endnote %}
      parameters:
        - name: app_project_id
          in: path
          description: Project ID.
          required: true
          schema:
            type: string

      responses:
        '200':
          description: OK

  /app-projects/{app_project_id}/unarchive:
    post:
      tags:
        - app-project
      summary:  Unarchive project
      description: >-
        Changes the project status to the last one it had before archiving.


        {% note tip %}


        **Try our [new API reference](https://toloka.ai/docs/api/apps-reference/#post-/app-projects/-app_project_id-/unarchive):** more parameter details, request/response examples, and code samples in various programming languages.


        {% endnote %}
      parameters:
        - name: app_project_id
          in: path
          description: Project ID
          required: true
          schema:
            type: string

      responses:
        '200':
          description: OK

  /app-projects/{app_project_id}/items/{item_id}:
    get:
      tags:
        - item
      summary: Get item by ID
      description: >-
        Displays the detailed information about the item with the ID specified
        in the request.


        {% note tip %}


        **Try our [new API reference](https://toloka.ai/docs/api/apps-reference/#get-/app-projects/-app_project_id-/items/-item_id-):** more parameter details, request/response examples, and code samples in various programming languages.


        {% endnote %}
      parameters:
        - name: app_project_id
          in: path
          description: Project ID.
          required: true
          schema:
            type: string
        - name: item_id
          in: path
          description: Task item ID.
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Item'
          description: OK
        '404':
          description: Task item {item_id} not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'

  /app-projects/{app_project_id}/items:
    get:
      tags:
        - item
      summary: Get project items
      description: >-
        Returns all the task items of the project with the ID specified in the
        request.


        {% note tip %}


        **Try our [new API reference](https://toloka.ai/docs/api/apps-reference/#get-/app-projects/-app_project_id-/items):** more parameter details, request/response examples, and code samples in various programming languages.


        {% endnote %}
      parameters:
        - name: app_project_id
          in: path
          description: Project ID.
          required: true
          schema:
            type: string
        - name: after_id
          in: query
          description: ID of the task item used for cursor pagination.
          required: false
          schema:
            type: string
        - name: batch_id
          in: query
          description: Batch ID.
          required: false
          schema:
            type: string
        - name: status
          in: query
          description: Item status.
          required: false
          schema:
            type: string
        - name: id_gt
          in: query
          description: Items with an ID greater than the specified value.
          required: false
          schema:
            type: string
        - name: id_gte
          in: query
          description: Items with an ID greater than or equal to the specified value.
          required: false
          schema:
            type: string
        - name: id_lt
          in: query
          description: Items with an ID smaller than the specified value.
          required: false
          schema:
            type: string
        - name: id_lte
          in: query
          description: Items with an ID smaller than or equal to the specified value.
          required: false
          schema:
            type: string
        - name: created_gt
          in: query
          description: "Items created after the specified date. The date and time is specified in UTC in ISO 8601 format: YYYY-MM-DDThh:mm:ss[.sss]."
          required: false
          schema:
            type: string
        - name: created_gte
          in: query
          description: "Items created after or on the specified date. The date and time is specified in UTC in ISO 8601 format: YYYY-MM-DDThh:mm:ss[.sss]."
          required: false
          schema:
            type: string
        - name: created_lt
          in: query
          description: "Items created before the specified date. The date and time is specified in UTC in ISO 8601 format: YYYY-MM-DDThh:mm:ss[.sss]."
          required: false
          schema:
            type: string
        - name: created_lte
          in: query
          description: "Items created on or before the specified date. The date and time is specified in UTC in ISO 8601 format: YYYY-MM-DDThh:mm:ss[.sss]."
          required: false
          schema:
            type: string
        - name: finished_gt
          in: query
          description: "Items labeled after the specified date. The date and time is specified in UTC in ISO 8601 format: YYYY-MM-DDThh:mm:ss[.sss]."
          required: false
          schema:
            type: string
        - name: finished_gte
          in: query
          description: "Items labeled after or on the specified date. The date and time is specified in UTC in ISO 8601 format: YYYY-MM-DDThh:mm:ss[.sss]."
          required: false
          schema:
            type: string
        - name: finished_lt
          in: query
          description: "Items labeled before the specified date. The date and time is specified in UTC in ISO 8601 format: YYYY-MM-DDThh:mm:ss[.sss]."
          required: false
          schema:
            type: string
        - name: finished_lte
          in: query
          description: "Items labeled before or on the specified date. The date and time is specified in UTC in ISO 8601 format: YYYY-MM-DDThh:mm:ss[.sss]."
          required: false
          schema:
            type: string
        - name: sort
          in: query
          description: 'The order and direction of sorting the results.

            Available parameters:

              * `id` â€” by id;

              * `created` â€” by creation date. The date and time is specified in UTC in ISO 8601 format: (YYYY-MM-DDThh:mm:ss[.sss]);

              * `status` â€” by object status;

              * `finished` â€” by labeling completion time.

            You can specify multiple parameters separated by a comma.

            To change the sorting direction (to sort in descending order),
            add a hyphen before the parameter. For example, sort=-id.'
          schema:
            type: string
        - name: limit
          in: query
          description: The number of items on the page is set to 100 by default. The maximum value is 1000.
          required: false
          schema:
            type: string

      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ItemListResult'
          description: OK
        '404':
          description: Items not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'

    post:
      tags:
        - item
      summary: Add new item
      description: >-
        Adds new item to a batch in the project with the ID specified in the request.


        {% note tip %}


        **Try our [new API reference](https://toloka.ai/docs/api/apps-reference/#post-/app-projects/-app_project_id-/items):** more parameter details, request/response examples, and code samples in various programming languages.


        {% endnote %}
      parameters:
        - name: app_project_id
          in: path
          description: Project ID.
          required: true
          schema:
            type: string
      requestBody:
        description: Parameters of the new item.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ItemCreateForm'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Item'
          description: OK
        '404':
          description: Task item not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'
        '400':
          description: Error in the request data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'
        '403':
          description: No authorization to perform this operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'

  /app-projects/{app_project_id}/items/bulk:
    post:
      tags:
        - item
      summary: Add items in bulk
      description: >-
        Adds multiple items to a batch in the project with the ID specified in the request,
        with the maximum of 10,000 items per request.


        {% note tip %}


        **Try our [new API reference](https://toloka.ai/docs/api/apps-reference/#post-/app-projects/-app_project_id-/items/bulk):** more parameter details, request/response examples, and code samples in various programming languages.


        {% endnote %}
      parameters:
        - name: app_project_id
          in: path
          description: Project ID.
          required: true
          schema:
            type: string
      requestBody:
        description: Parameters of new task items.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ItemsBulkCreateForm'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemsBulkCreateResponse'
          description: OK
        '404':
          description: Task items not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'
        '400':
          description: Error in the request data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'
        '403':
          description: No authorization to perform this operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'
        '413':
          description: The request is too large. The maximum number of items per request is 10,000.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'


  /app-projects/{app_project_id}/batches:
    get:
      tags:
        - batch
      summary: Get project batches
      description: >-
        Returns the complete list of the batches associated with the project
        with the ID specified in the request.


        {% note tip %}


        **Try our [new API reference](https://toloka.ai/docs/api/apps-reference/#get-/app-projects/-app_project_id-/batches):** more parameter details, request/response examples, and code samples in various programming languages.


        {% endnote %}
      parameters:
        - name: app_project_id
          in: path
          description: Project ID.
          required: true
          schema:
            type: string
        - name: after_id
          in: query
          description: ID of the batch used for cursor pagination.
          required: false
          schema:
            type: string
        - name: status
          in: query
          description: Batch status.
          required: false
          schema:
            type: string
        - name: id_gt
          in: query
          description: Batches with an ID greater than the specified value.
          required: false
          schema:
            type: string
        - name: id_gte
          in: query
          description: Batches with an ID greater than or equal to the specified value.
          required: false
          schema:
            type: string
        - name: id_lt
          in: query
          description: Batches with an ID smaller than the specified value.
          required: false
          schema:
            type: string
        - name: id_lte
          in: query
          description: Batches with an ID smaller than or equal to the specified value.
          required: false
          schema:
            type: string
        - name: name_gt
          in: query
          description: Batches with a name lexicographically greater than the specified value.
          required: false
          schema:
            type: string
        - name: name_gte
          in: query
          description: Batches with a name lexicographically greater than or equal to the specified value.
          required: false
          schema:
            type: string
        - name: name_lt
          in: query
          description: Batches with a name lexicographically smaller than the specified value.
          required: false
          schema:
            type: string
        - name: name_lte
          in: query
          description: Batches with a name lexicographically smaller than or equal to the specified value.
          required: false
          schema:
            type: string
        - name: created_gt
          in: query
          description: "Batches created after the specified date. The date and time is specified in UTC in ISO 8601 format: YYYY-MM-DDThh:mm:ss[.sss]."
          required: false
          schema:
            type: string
        - name: created_gte
          in: query
          description: "Batches created after or on the specified date. The date and time is specified in UTC in ISO 8601 format: YYYY-MM-DDThh:mm:ss[.sss]."
          required: false
          schema:
            type: string
        - name: created_lt
          in: query
          description: "Batches created before the specified date. The date and time is specified in UTC in ISO 8601 format: YYYY-MM-DDThh:mm:ss[.sss]."
          required: false
          schema:
            type: string
        - name: created_lte
          in: query
          description: "Batches created on or before the specified date. The date and time is specified in UTC in ISO 8601 format: YYYY-MM-DDThh:mm:ss[.sss]."
          required: false
          schema:
            type: string
        - name: sort
          in: query
          description: 'The order and direction of sorting the results.

            Available parameters:

              * `id` - by id;

              * `name` - by name;

              * `created` â€” by the creation date. The date and time is specified in UTC in ISO 8601 format: (YYYY-MM-DDThh:mm:ss[.sss]);

              * `status` â€” by status.

            You can specify multiple parameters separated by a comma.

            To change the sorting direction (to sort in descending order),
            add a hyphen before the parameter. For example, sort=-id.'
          required: false
          schema:
            type: string
        - name: limit
          in: query
          description: The number of batches on the page is set to 100 by default. The maximum value is 1000.
          required: false
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BatchListResult'
          description: OK
        '404':
          description: Batch not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'

    post:
      tags:
        - batch
      summary: Create batch with items
      description: >-
        Creates a batch of task items for the project with the ID specified in
        the request, with the maximum of 10,000 items per request.


        It also sets the created batch priority for labeling based on the `priority_order` value specified in the request: `ONE` (meaning the highest priority), `TWO`, `THREE`, `FOUR`, `FIVE` (for the lowest priority, default value). If you do not specify the `priority_order` value the batch will be created with `priority_order = FIVE`.


        {% note tip %}


        **Try our [new API reference](https://toloka.ai/docs/api/apps-reference/#post-/app-projects/-app_project_id-/batches):** more parameter details, request/response examples, and code samples in various programming languages.


        {% endnote %}
      parameters:
        - name: app_project_id
          in: path
          description: Project ID.
          required: true
          schema:
            type: string
      requestBody:
        description: Parameters of the new batch.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchCreateForm'
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Batch'
          description: OK
        '404':
          description: Batch not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'
        '400':
          description: Error in the request data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'
        '403':
          description: No authorization to perform this operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'
        '413':
          description: The request is too large. The maximum number of items per request is 10,000.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'

  /app-projects/{app_project_id}/batches/sync:
    post:
      tags:
        - batch
      summary: Start sync batch processing
      description: >-
        Starts processing the batch with the ID specified in the request. This batch processing is applicable for solutions which use **synchronous protocols only**.


        {% note tip %}


        **Try our [new API reference](https://toloka.ai/docs/api/apps-reference/#post-/app-projects/-app_project_id-/batches/sync):** more parameter details, request/response examples, and code samples in various programming languages.


        {% endnote %}
      parameters:
        - name: app_project_id
          in: path
          description: Project ID.
          required: true
          schema:
            type: string
      requestBody:
        description: Parameters of the new batch.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchCreateSyncForm'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchSyncResponse'
          description: OK
        '400':
          description: Error in the request data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'
        '403':
          description: No authorization to perform this operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'

  /app-projects/{app_project_id}/batches/{batch_id}:
    get:
      tags:
        - batch
      summary: Get batch by ID
      description: >-
        Returns the detailed information about the batch with the ID specified
        in the request.


        {% note tip %}


        **Try our [new API reference](https://toloka.ai/docs/api/apps-reference/#get-/app-projects/-app_project_id-/batches/-batch_id-):** more parameter details, request/response examples, and code samples in various programming languages.


        {% endnote %}
      parameters:
        - name: app_project_id
          in: path
          description: Project ID.
          required: true
          schema:
            type: string
        - name: batch_id
          in: path
          description: Batch ID.
          required: true
          schema:
            type: string

      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Batch'
          description: OK
        '404':
          description: Batch {batch_id} not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'
    patch:
      tags:
        - batch
      summary: Update batch
      description: >-
        Modifies the name and priority of the batch with the ID specified in the request.


        For `priority_order`, `ONE` is the highest value, batch items which have this value will be sent for labeling first in the queue. The default value is `FIVE`. If you don't specify `name` or `priority_order` parameter values, they will not change.


        {% note tip %}


        **Try our [new API reference](https://toloka.ai/docs/api/apps-reference/#patch-/app-projects/-app_project_id-/batches/-batch_id-):** more parameter details, request/response examples, and code samples in various programming languages.


        {% endnote %}
      parameters:
        - name: app_project_id
          in: path
          description: Project ID.
          required: true
          schema:
            type: string
        - name: batch_id
          in: path
          description: Batch ID.
          required: true
          schema:
            type: string
      requestBody:
          description: Parameters for updating the batch name.
          required: true
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchPatchForm'
      responses:
          '200':
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Batch'
            description: OK
          '404':
            description: Batch {batch_id} not found.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/RequestError'

  /app-projects/{app_project_id}/batches/{batch_id}/start:
    post:
      tags:
        - batch
      summary: Start batch processing
      description: >-
        Starts processing the batch with the ID specified in the request. The
        batch processing starts asynchronously.


        {% note tip %}


        **Try our [new API reference](https://toloka.ai/docs/api/apps-reference/#post-/app-projects/-app_project_id-/batches/-batch_id-/start):** more parameter details, request/response examples, and code samples in various programming languages.


        {% endnote %}
      parameters:
        - name: app_project_id
          in: path
          description: Project ID.
          required: true
          schema:
            type: string
        - name: batch_id
          in: path
          description: Batch ID.
          required: true
          schema:
            type: string

      responses:
        '200':
          description: OK

  /app-projects/{app_project_id}/batches/{batch_id}/stop:
    post:
      tags:
        - batch
      summary: Stop batch processing
      description: >-
        Stops processing the batch with the ID specified in the request.
        Processing can be stopped only for the batch with the `PROCESSING`
        status.


        {% note tip %}


        **Try our [new API reference](https://toloka.ai/docs/api/apps-reference/#post-/app-projects/-app_project_id-/batches/-batch_id-/stop):** more parameter details, request/response examples, and code samples in various programming languages.


        {% endnote %}
      parameters:
        - name: app_project_id
          in: path
          description: Project ID.
          required: true
          schema:
            type: string
        - name: batch_id
          in: path
          description: Batch ID.
          required: true
          schema:
            type: string

      responses:
        '200':
          description: OK

  /app-projects/{app_project_id}/batches/{batch_id}/resume:
    post:
      tags:
        - batch
      summary: Resume batch processing
      description: >-
        Resumes processing the batch with the ID specified in the request.
        Processing can be resumed only for the batch with the `STOPPING` or
        `STOPPED` status.


        {% note tip %}


        **Try our [new API reference](https://toloka.ai/docs/api/apps-reference/#post-/app-projects/-app_project_id-/batches/-batch_id-/resume):** more parameter details, request/response examples, and code samples in various programming languages.


        {% endnote %}
      parameters:
        - name: app_project_id
          in: path
          description: Project ID.
          required: true
          schema:
            type: string
        - name: batch_id
          in: path
          description: Batch ID.
          required: true
          schema:
            type: string

      responses:
        '200':
          description: OK

  /apps:
    get:
      tags:
        - app
      parameters:
        - name: after_id
          in: query
          description: The parameter is used for cursor pagination and indicates the first ID that's used when generating a list of objects. It accounts for filters and sorting.
          required: false
          schema:
            type: string
        - name: id_gt
          in: query
          description: Only with an ID greater than the specified value.
          required: false
          schema:
            type: string
        - name: id_gte
          in: query
          description: Only with an ID greater than or equal to the specified value.
          required: false
          schema:
            type: string
        - name: id_lt
          in: query
          description: Only with an ID smaller than the specified value.
          required: false
          schema:
            type: string
        - name: id_lte
          in: query
          description: Only with an ID smaller than or equal to the specified value.
          required: false
          schema:
            type: string
        - name: sort
          in: query
          description: 'The order and direction of sorting the results.

            Available parameters:

              * `id` - by ID.

            You can specify multiple parameters separated by a comma.

            To change the sorting direction to descending,
            add a hyphen before the parameter. For example, sort=-id.'
          required: false
          schema:
            type: string
        - name: limit
          in: query
          description: The number of objects on the page is set to 100 by default. The maximum value is 1000.
          required: false
          schema:
            type: string
        - name: lang
          in: query
          description: ISO 639 language code.
          required: false
          schema:
            type: string

      summary: Get project templates
      description: >-
        Returns the list of all the available project templates.


        {% note tip %}


        **Try our [new API reference](https://toloka.ai/docs/api/apps-reference/#get-/apps):** more parameter details, request/response examples, and code samples in various programming languages.


        {% endnote %}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AppListResult'
          description: OK

  /apps/{app_id}:
    get:
      tags:
        - app
      summary: Get project template by ID
      description: >-
        Returns the detailed information about the project template with the ID specified in the request.


        {% note tip %}


        **Try our [new API reference](https://toloka.ai/docs/api/apps-reference/#get-/apps/-app_id-):** more parameter details, request/response examples, and code samples in various programming languages.


        {% endnote %}
      parameters:
        - name: app_id
          in: path
          description: Template ID
          required: true
          schema:
            type: string
        - name: lang
          in: query
          description: ISO 639 language code.
          required: false
          schema:
            type: string

      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppResult'
          description: OK


components:
  schemas:
    AppProjectListResult:
      type: object
      description: Response to the request for the list of projects.
      properties:
        has_more:
          type: boolean
          default: false
        items:
          type: array
          items:
            $ref: '#/components/schemas/AppProjectListItem'

    AppProject:
      type: object
      description: Bespoke solution.
      properties:
        id:
          type: string
          example: "1"
        app_id:
          type: string
          example: "20"
        parent_app_project_id:
          type: string
          description: "2"
        status:
          type: string
          enum:
            - CREATING
            - READY
            - ARCHIVE
            - ERROR
          description: Project statuses for asynchronous creation.
        created:
          type: string
          format: date-time
        name:
          type: string
          example: "My app-project"
        item_price:
          type: number
          format: double
          example: 0.05
        parameters:
          type: object
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ItemError'
        read_only:
          type: boolean
        app:
          $ref: '#/components/schemas/AppLightestResult'

    AppProjectListItem:
      type: object
      description: Project.
      properties:
        id:
          type: string
          example: "1"
        app_id:
          type: string
          example: "20"
        parent_app_project_id:
          type: string
          description: "2"
        status:
          type: string
          enum:
            - CREATING
            - READY
            - ARCHIVED
            - ERROR
          description: Project statuses for asynchronous creation.
        created:
          type: string
          format: date-time
        name:
          type: string
          example: "My app-project"
        item_price:
          type: number
          format: double
          example: 0.05
        parameters:
          type: object
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ItemError'
        read_only:
          type: boolean
        app:
          $ref: '#/components/schemas/AppLightestResult'

    AppProjectCreateForm:
      type: object
      description: Bespoke solution.
      properties:
        app_id:
          type: string
          description: Project template ID
        parent_app_project_id:
          type: string
          description: ID of the project used for cloning.
        name:
          type: string
          description: Project name.
        parameters:
          type: object
          description: Project settings according to param_spec from the project template with the specified ID (app_id).

    AppResult:
      type: object
      description: Bespoke solution.
      properties:
        id:
          type: string
          description: The bespoke project template ID.
        name:
          type: string
          description: Name.
        image:
          type: string
          description: Image.
        description:
          type: string
          description: Overview.
        constraints_description:
          type: string
          description: Description of limitations.
        default_item_price:
          type: number
          format: double
          description: Default processing cost per task item.
        param_spec:
          type: object
          description: Specification of parameters for creating a project.
        input_spec:
          type: object
          description: Schema of input data in Toloka format.
        output_spec:
          type: object
          description: Schema of output data in Toloka format.
        examples:
          type: object
          description: Task examples.
        input_format_info:
          type: object
          description: Information about the input data format

    AppLightestResult:
      type: object
      description: Brief information about the project template.
      properties:
        id:
          type: string
          description: Template ID.
        name:
          type: string
          description: Template name.

    AppListItem:
      type: object
      description: Bespoke solution.
      properties:
        id:
          type: string
          description: Project template ID.
        name:
          type: string
          description: Template name.
        image:
          type: string
          description: Image.
        description:
          type: string
          description: Template description.
        default_item_price:
          type: number
          format: double
          description: Default processing cost per task item.
        examples:
          type: array
          items:
            type: object
            description: Information about possible use cases for bespoke solutions.

    AppListResult:
      type: object
      description: Response to the request for the list of project templates (Apps).
      properties:
        has_more:
          type: boolean
          default: false
        content:
          type: array
          items:
            $ref: '#/components/schemas/AppListItem'

    ItemListResult:
      type: object
      description: Response to the request for the list of task items.
      properties:
        has_more:
          type: boolean
          default: false
        content:
          type: array
          items:
            $ref: '#/components/schemas/Item'

    Item:
      type: object
      description: A task item with data.
      required:
        - app_project_id
        - input_data
      properties:
        id:
          type: string
          description: Item ID.
        app_project_id:
          type: string
          description: ID of the project that includes the batch with this task item.
        batch_id:
          type: string
          description: ID of the batch that includes this task item.
        status:
          type: string
          description: Processing status. NEW - new, PROCESSING - being processed, COMPLETED - processing completed, ERROR - processing error, CANCELLED - processing canceled, ARCHIVE - item archived, NO_MONEY - not enough money for processing, STOPPED - processing stopped by the client.
          enum:
            - NEW
            - PROCESSING
            - COMPLETED
            - ERROR
            - CANCELLED
            - ARCHIVE
            - NO_MONEY
            - STOPPED
        input_data:
          type: object
          description: Task item data following the project template schema.
        output_data:
          type: object
          description: Result of processing.
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ItemError'
        created_at:
          type: string
          format: date-time
          description: "Date and time when the task item was created. The date and time is specified in UTC in ISO 8601 format: YYYY-MM-DDThh:mm:ss[.sss]."
        started_at:
          type: string
          format: date-time
          description: "Date and time when task item processing started. The date and time is specified in UTC in ISO 8601 format: YYYY-MM-DDThh:mm:ss[.sss]."
        finished_at:
          type: string
          format: date-time
          description: "Date and time when task item processing was completed. The date and time is specified in UTC in ISO 8601 format: YYYY-MM-DDThh:mm:ss[.sss]."

    ItemsBulkCreateResponse:
      type: array
      items:
        type: string
        description: ID of the uploaded task item.

    ItemCreateForm:
      type: object
      description: A task item with data.
      required:
        - input_data
      properties:
        batch_id:
          type: string
          description: Batch ID.
        input_data:
          type: object
          description: Object data according to input_spec of the bespoke solution.
        force_new_original:
          type: boolean
          default: false
          description: Whether to enable or disable the deduplication for the item in the request. When set to `true`, the item will be re-labeled regardless of whether pre-labeled duplicates exist.

    ItemsBulkCreateForm:
      type: object
      description: Task items with data. No more than 10,000 items per request.
      required:
        - items
      properties:
        batch_id:
          type: string
          description: Batch ID.
        items:
          type: array
          description: List of items.
          items:
            type: object
            description: Object data according to input_spec of the bespoke solution.
        force_new_original:
          type: boolean
          default: false
          description: Whether to enable or disable the deduplication for all the items in the request. When set to `true`, all the items will be re-labeled regardless of whether pre-labeled duplicates exist.

    BatchListResult:
      type: object
      description: Response to the request for the list of batches.
      properties:
        has_more:
          type: boolean
          default: false
        content:
          type: array
          items:
            $ref: '#/components/schemas/Batch'

    BatchSyncResponse:
      type: object
      description: Response to a request for synchronous batch processing.
      properties:
        batch:
          $ref: '#/components/schemas/Batch'
        items:
          type: array
          items:
            $ref: '#/components/schemas/Item'

    Batch:
      type: object
      properties:
        id:
          type: string
          description: Batch ID.
        app_project_id:
          type: string
          description: Project ID.
        status:
          type: string
          description: The state of the batch, calculated based on the states of items comprising it.
          enum:
            - NEW
            - PROCESSING
            - COMPLETED
            - ERROR
            - CANCELLED
            - NO_MONEY
            - ARCHIVE
            - LOADING
            - STOPPING
            - STOPPED
        name:
          type: string
          description: Batch name.
        item_count:
          type: integer
          description: Number of items in the batch.
        item_price:
          type: number
          format: double
          description: The cost of processing per task item in a batch.
        cost:
          type: number
          format: double
          description: The cost of processing per batch.
        cost_of_processed:
          type: number
          format: double
          description: Cost of already processed task items.
        created_at:
          type: string
          format: date-time
          description: "Date and time when the batch was created. The date and time is specified in UTC in ISO 8601 format: YYYY-MM-DDThh:mm:ss[.sss]."
        started_at:
          type: string
          format: date-time
          description: "Date and time when batch processing started. The date and time is specified in UTC in ISO 8601 format: YYYY-MM-DDThh:mm:ss[.sss]."
        finished_at:
          type: string
          format: date-time
          description: "Date and time when batch processing was completed. The date and time is specified in UTC in ISO 8601 format: YYYY-MM-DDThh:mm:ss[.sss]."
        read_only:
          type: boolean
        last_items_import:
          $ref: '#/components/schemas/ItemImport'
        confidence_avg:
          type: number
          format: double
          description: Average labeling quality.
        items_processed_count:
          type: integer
          description: Number of labeled items.
        eta:
          type: string
          format: date-time
          description: "Expected date and time when batch processing will be completed. The date and time is specified in UTC in ISO 8601 format: YYYY-MM-DDThh:mm:ss[.sss]."
        items_per_state:
          type: object
          description: Statistics on the number of items in each state.
        priority_order:
          type: string
          description: Batch priority. `ONE` is the highest value, batch items with this `priority_order` value will be sent for labeling first in the queue. The default value is `FIVE`.
          enum:
            - ONE
            - TWO
            - THREE
            - FOUR
            - FIVE

    BatchCreateForm:
      type: object
      properties:
        name:
          type: string
          description: Batch name.
          example: A test batch
        items:
          type: array
          items:
            type: object
            description: The item data following the project template schema (`input_spec`). No more than 10,000 items per request.
        priority_order:
          type: string
          description: Batch priority. `ONE` is the highest value, batch items with this `priority_order` value will be sent for labeling first in the queue. The default value is `FIVE`.
          enum:
            - ONE
            - TWO
            - THREE
            - FOUR
            - FIVE
        force_new_original:
          type: boolean
          default: false
          description: Whether to enable or disable the deduplication for all the items in the request. When set to `true`, all the items will be re-labeled regardless of whether pre-labeled duplicates exist.

    BatchCreateSyncForm:
      type: object
      properties:
        name:
          type: string
          description: Batch name.
          example: A test batch
        items:
          type: array
          items:
            type: object
            description: The item data following the project template schema (`input_spec`). No more than 10,000 items per request.

    BatchPatchForm:
      type: object
      description: Batch partial update form.
      properties:
        name:
          type: string
          description: Batch name. If not specified or the value is empty, the current batch name will not change.
          example: A test batch.
        priority_order:
          type: string
          description: Batch priority. `ONE` is the highest value, batch items with this `priority_order` value will be sent for labeling first in the queue. If the priority is not specified in the request the current `priority_order` value will not change.
          enum:
            - ONE
            - TWO
            - THREE
            - FOUR
            - FIVE

    ItemImport:
      type: object
      description: Meta-information on asynchronous loading operation (possible via UI).
      properties:
        id:
          type: string
        records_count:
          type: integer
          description: Number of items in the loading operation.
        records_processed:
          type: integer
          description: Number of successfully loaded items in the loading operation.
        errors:
          type: object
          description: Errors during the loading operation.

    RequestError:
      type: object
      required:
        - request_id
        - code
        - message
      properties:
        request_id:
          type: string
          example: 337d68d1-974d-42b1-a2d0-6234f6373eed
          description: Internal ID of the HTTP request where the error occurred. It needs to be specified when contacting support.
        code:
          type: string
          description: String error code.
          example: DOES_NOT_EXIST
        message:
          type: string
          description: Detailed description of the error.
          example: The object doesn't exist
        payload:
          type: object
          description: Additional information about the error. May have a different structure for different errors.
          nullable: true
          example: {
            "instruction_class": "dog",
            "instruction_field": "example"
          }

    ItemError:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: string
          description: String error code.
          example: DOES_NOT_EXIST
        message:
          type: string
          description: Detailed description of the error.
          example: The object doesn't exist
        payload:
          type: object
          description: Additional information about the error. May have a different structure for different errors.
          nullable: true
          example: {
            "instruction_class": "dog",
            "instruction_field": "example"
          }
